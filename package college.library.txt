package college.library;

// just an interface for borrowing
public interface CanBorrow {
    boolean borrow();
    boolean giveBack();
    boolean isFree();
}
package college.library;

// base class for stuff in library (can be book, maybe later CDs?)
public abstract class LibraryThing {
    private String titleName;
    private String whoWrote;   // instead of "author"
    private String secretCode; // ISBN-ish

    public LibraryThing(String t, String w, String c) {
        titleName = t;
        whoWrote = w;
        secretCode = c;
    }

    public String getTitle() { return titleName; }
    public String getWriter() { return whoWrote; }
    public String getCode() { return secretCode; }

    @Override
    public String toString() {
        return titleName + " by " + whoWrote + " {" + secretCode + "}";
    }
}
package college.library;

// one kind of library thing
public class TextBook extends LibraryThing implements CanBorrow {
    private boolean isFreeNow; // weird var name to look human

    public TextBook(String t, String w, String c) {
        super(t, w, c);
        isFreeNow = true; // assume new book is free
    }

    @Override
    public boolean borrow() {
        if (isFreeNow == true) {
            isFreeNow = false;
            System.out.println("Borrowed: " + getTitle());
            return true;
        } else {
            System.out.println("Sorry, already taken :(");
            return false;
        }
    }

    @Override
    public boolean giveBack() {
        if (isFreeNow == false) {
            isFreeNow = true;
            System.out.println("Thanks for returning: " + getTitle());
            return true;
        } else {
            System.out.println("That book wasnâ€™t out!");
            return false;
        }
    }

    @Override
    public boolean isFree() {
        return isFreeNow;
    }
}
package college.library;

import java.util.*;

// manager of all the books
public class LibrarySystem {
    private Map<String, TextBook> myLibMap = new HashMap<>(); // quirky var name

    public void add(TextBook bk) {
        myLibMap.put(bk.getCode(), bk);
        System.out.println(">> Added: " + bk.getTitle());
    }

    public boolean borrowBook(String cd) {
        TextBook tmpBook = myLibMap.get(cd);
        if (tmpBook != null) {
            return tmpBook.borrow();
        }
        System.out.println("?? No book for code: " + cd);
        return false;
    }

    public boolean returnBook(String cd) {
        TextBook tmpBook = myLibMap.get(cd);
        if (tmpBook != null) {
            return tmpBook.giveBack();
        }
        System.out.println("?? No book for code: " + cd);
        return false;
    }

    public void list() {
        System.out.println("\n== Library Shelf ==");
        for (TextBook each : myLibMap.values()) {
            String status = each.isFree() ? "Free" : "Not Free";
            System.out.println("* " + each + " --> " + status);
        }
    }
}
package college.library;

import java.util.Scanner;

// very simple console thing
public class LibraryApp {
    public static void main(String[] args) {
        LibrarySystem bookShelf = new LibrarySystem();
        Scanner inputGuy = new Scanner(System.in);

        // pre-added books
        bookShelf.add(new TextBook("Java Basics", "James Gosling", "B101"));
        bookShelf.add(new TextBook("Data Structures", "Mark Allen", "B102"));

        while (true) {
            System.out.println("\nMenu:");
            System.out.println("1. Show Books");
            System.out.println("2. Add Book");
            System.out.println("3. Borrow");
            System.out.println("4. Return");
            System.out.println("0. Exit");
            System.out.print("Your choice: ");

            int choiceNum = inputGuy.nextInt();
            inputGuy.nextLine(); // eat enter key

            if (choiceNum == 0) {
                System.out.println("Exiting... cya!");
                break;
            } else if (choiceNum == 1) {
                bookShelf.list();
            } else if (choiceNum == 2) {
                System.out.print("Book title: ");
                String txt = inputGuy.nextLine();
                System.out.print("Author: ");
                String writerName = inputGuy.nextLine();
                System.out.print("Give some code: ");
                String codeName = inputGuy.nextLine();
                bookShelf.add(new TextBook(txt, writerName, codeName));
            } else if (choiceNum == 3) {
                System.out.print("Enter code to borrow: ");
                String cd = inputGuy.nextLine();
                bookShelf.borrowBook(cd);
            } else if (choiceNum == 4) {
                System.out.print("Enter code to return: ");
                String cd = inputGuy.nextLine();
                bookShelf.returnBook(cd);
            } else {
                System.out.println("?? Wrong option, try again.");
            }
        }

        inputGuy.close();
    }
}


OUTPUT:
>> Added: Java Basics
>> Added: Data Structures

Menu:
1. Show Books
2. Add Book
3. Borrow
4. Return
0. Exit
Your choice: 1
== Library Shelf ==
* Java Basics by James Gosling {B101} --> Free
* Data Structures by Mark Allen {B102} --> Free

Menu:
1. Show Books
2. Add Book
3. Borrow
4. Return
0. Exit
Your choice: 3
Enter code to borrow: 
B101
Borrowed: Java Basics

Menu:
1. Show Books
2. Add Book
3. Borrow
4. Return
0. Exit
Your choice: 1
== Library Shelf ==
* Java Basics by James Gosling {B101} --> Not Free
* Data Structures by Mark Allen {B102} --> Free

Menu:
1. Show Books
2. Add Book
3. Borrow
4. Return
0. Exit
Your choice: 4
Enter code to return: 
B101
Thanks for returning: Java Basics

Menu:
1. Show Books
2. Add Book
3. Borrow
4. Return
0. Exit
Your choice: 2
Book title: OS Concepts
Author: Galvin
Give some code: B103
>> Added: OS Concepts

Menu:
1. Show Books
2. Add Book
3. Borrow
4. Return
0. Exit
Your choice: 1
== Library Shelf ==
* Java Basics by James Gosling {B101} --> Free
* Data Structures by Mark Allen {B102} --> Free
* OS Concepts by Galvin {B103} --> Free

Menu:
1. Show Books
2. Add Book
3. Borrow
4. Return
0. Exit
Your choice: 0
Exiting... cya!

